// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace DiamondShop.Data.Models;

public partial class Net1814_212_3_DiamondContext : DbContext
{
    public Net1814_212_3_DiamondContext()
    {
    }

    public Net1814_212_3_DiamondContext(DbContextOptions<Net1814_212_3_DiamondContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Diamond> Diamonds { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<Orderdetail> Orderdetails { get; set; }

    public virtual DbSet<Productcategory> Productcategories { get; set; }

    public virtual DbSet<Promotion> Promotions { get; set; }

    public virtual DbSet<Shell> Shells { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    => optionsBuilder.UseSqlServer(GetConnectionString());

    private string? GetConnectionString()
    {
        IConfiguration configuration = new ConfigurationBuilder()
                .SetBasePath(Directory.GetCurrentDirectory())
                .AddJsonFile("appsettings.json", true, true).Build();
        return configuration["ConnectionStrings:DefaultConnection"];
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerId).HasName("PK__CUSTOMER__A4AE64B8E69B0A0F");

            entity.ToTable("CUSTOMER");

            entity.Property(e => e.CustomerId)
                .HasMaxLength(254)
                .HasColumnName("CustomerID");
            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Country).HasMaxLength(50);
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(254);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Gender).HasMaxLength(10);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<Diamond>(entity =>
        {
            entity.HasKey(e => e.DiamondId).HasName("PK__DIAMOND__23A8E7BB6155D4FE");

            entity.ToTable("DIAMOND");

            entity.Property(e => e.DiamondId)
                .HasMaxLength(36)
                .HasColumnName("DiamondID");
            entity.Property(e => e.Carat).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.CategoryId)
                .IsRequired()
                .HasMaxLength(36)
                .HasColumnName("CategoryID");
            entity.Property(e => e.CertificateScan).IsRequired();
            entity.Property(e => e.CertifyingAuthority).HasMaxLength(100);
            entity.Property(e => e.Clarity)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Color)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Cost).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Cut)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Fluorescence).HasMaxLength(50);
            entity.Property(e => e.ImageUrl)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Polish).HasMaxLength(50);
            entity.Property(e => e.Symmetry).HasMaxLength(50);

            entity.HasOne(d => d.Category).WithMany(p => p.Diamonds)
                .HasForeignKey(d => d.CategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DIAMOND__Categor__34C8D9D1");
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.OrderId).HasName("PK__ORDERS__C3905BAF1C65BA9C");

            entity.ToTable("ORDERS");

            entity.Property(e => e.OrderId)
                .HasMaxLength(36)
                .HasColumnName("OrderID");
            entity.Property(e => e.CustomerId)
                .IsRequired()
                .HasMaxLength(254)
                .HasColumnName("CustomerID");
            entity.Property(e => e.PaymentMethod)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.PaymentStatus)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.PromotionId)
                .HasMaxLength(36)
                .HasColumnName("PromotionID");
            entity.Property(e => e.ShippingAddress)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.ShippingStatus)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.TotalPrice).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Customer).WithMany(p => p.Orders)
                .HasForeignKey(d => d.CustomerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ORDERS__Customer__4E88ABD4");

            entity.HasOne(d => d.Promotion).WithMany(p => p.Orders)
                .HasForeignKey(d => d.PromotionId)
                .HasConstraintName("FK__ORDERS__Promotio__52593CB8");
        });

        modelBuilder.Entity<Orderdetail>(entity =>
        {
            entity.HasKey(e => e.OrderDetailId).HasName("PK__ORDERDET__D3B9D30C38E1124D");

            entity.ToTable("ORDERDETAIL");

            entity.Property(e => e.OrderDetailId)
                .HasMaxLength(36)
                .HasColumnName("OrderDetailID");
            entity.Property(e => e.DiscountPercentage).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.LineTotal).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.MainDiamondId)
                .IsRequired()
                .HasMaxLength(36)
                .HasColumnName("MainDiamondID");
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.OrderId)
                .IsRequired()
                .HasMaxLength(36)
                .HasColumnName("OrderID");
            entity.Property(e => e.ShellId)
                .IsRequired()
                .HasMaxLength(36)
                .HasColumnName("ShellID");
            entity.Property(e => e.SubDiamondId)
                .IsRequired()
                .HasMaxLength(36)
                .HasColumnName("SubDiamondID");
            entity.Property(e => e.UnitPrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.UnitWeight).HasColumnType("decimal(5, 2)");

            entity.HasOne(d => d.MainDiamond).WithMany(p => p.OrderdetailMainDiamonds)
                .HasForeignKey(d => d.MainDiamondId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ORDERDETA__MainD__5629CD9C");

            entity.HasOne(d => d.Order).WithMany(p => p.Orderdetails)
                .HasForeignKey(d => d.OrderId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ORDERDETA__Order__5535A963");

            entity.HasOne(d => d.Shell).WithMany(p => p.Orderdetails)
                .HasForeignKey(d => d.ShellId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ORDERDETA__Shell__571DF1D5");

            entity.HasOne(d => d.SubDiamond).WithMany(p => p.OrderdetailSubDiamonds)
                .HasForeignKey(d => d.SubDiamondId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ORDERDETA__SubDi__5812160E");
        });

        modelBuilder.Entity<Productcategory>(entity =>
        {
            entity.HasKey(e => e.CategoryId).HasName("PK__PRODUCTC__19093A2B39814BBA");

            entity.ToTable("PRODUCTCATEGORY");

            entity.HasIndex(e => e.Name, "UQ__PRODUCTC__737584F618942B8A").IsUnique();

            entity.Property(e => e.CategoryId)
                .HasMaxLength(36)
                .HasColumnName("CategoryID");
            entity.Property(e => e.CareInstructions).IsUnicode(false);
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IconUrl)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IsFeatured).HasDefaultValue(false);
            entity.Property(e => e.MaximumPrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.MinimumPrice).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.PromotionImageUrl)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PromotionalTagline)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Promotion>(entity =>
        {
            entity.HasKey(e => e.PromotionId).HasName("PK__PROMOTIO__52C42F2F2DFCE8C6");

            entity.ToTable("PROMOTION");

            entity.Property(e => e.PromotionId)
                .HasMaxLength(36)
                .HasColumnName("PromotionID");
            entity.Property(e => e.Amount).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Shell>(entity =>
        {
            entity.HasKey(e => e.ShellId).HasName("PK__SHELL__DB5C54BD65D7946A");

            entity.ToTable("SHELL");

            entity.Property(e => e.ShellId)
                .HasMaxLength(36)
                .HasColumnName("ShellID");
            entity.Property(e => e.CategoryId).HasMaxLength(36);
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.DiamondShape).HasMaxLength(100);
            entity.Property(e => e.ImageUrl)
                .HasMaxLength(255)
                .HasColumnName("ImageURL");
            entity.Property(e => e.Metal).HasMaxLength(50);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Price).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Style).HasMaxLength(50);
            entity.Property(e => e.Weight).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Category).WithMany(p => p.Shells)
                .HasForeignKey(d => d.CategoryId)
                .HasConstraintName("FK_CategoryID");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}